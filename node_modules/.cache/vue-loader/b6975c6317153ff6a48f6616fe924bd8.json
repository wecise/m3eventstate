{"remainingRequest":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/src/components/graph/searchbar/SearchBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/src/components/graph/searchbar/SearchBar.vue","mtime":1629774127603},{"path":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SearchBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"SearchBar.vue","sourceRoot":"src/components/graph/searchbar","sourcesContent":["<template>\n    <el-container class=\"search-bar\">\n        <el-header style=\"display:flex;height:35px;line-height:35px;padding:0px;\">\n            <el-button type=\"text\" :icon=\"controlStatus\" @click=\"control.show=!control.show\"></el-button>\n            <template v-if=\"control.show\">\n                <el-input v-model=\"entity.search.term\" placeholder=\"搜索实体、活动关键字\" \n                    @blur=\"onEntitySearch\"\n                    @clear=\"onEntityClear\"\n                    @keyup.enter.native=\"onEntitySearch\" \n                    clearable autofocus class=\"input\">\n                    <template slot=\"prepend\">\n                        <el-dropdown trigger=\"hover\" placement=\"top-end\"  :hide-on-click=\"true\">\n                            <el-tooltip content=\"选则实体类\">\n                                <el-button type=\"text\" size=\"mini\">\n                                    <span class=\"el-icon-office-building\" style=\"font-size:16px;\"></span>\n                                </el-button>\n                            </el-tooltip>\n                            <el-dropdown-menu slot=\"dropdown\">\n                                <el-dropdown-item>\n                                    <ActionView root=\"/matrix/entity\" @node-click=\"onEntityTreeSelected\"></ActionView>\n                                </el-dropdown-item>\n                            </el-dropdown-menu>\n                        </el-dropdown>\n                    </template>\n                </el-input>\n                <el-button type=\"text\" class=\"path\" @click=\"$emit('toggle-view','PathBar')\">\n                    <el-image src=\"/static/assets/images/tools/png/path-blue.png\" style=\"width:16px;\"></el-image>\n                </el-button>\n                <el-button type=\"text\" class=\"adv\" @click=\"$emit('toggle-view','AdvBar')\">\n                    高级\n                </el-button>\n                <el-button type=\"success\" class=\"search\" :loading=\"entity.search.loading\">\n                    <span class=\"el-icon-search\"></span>\n                </el-button>\n                <el-dropdown trigger=\"click\">\n                    <span class=\"el-dropdown-link\">\n                        <el-button type=\"text\" icon=\"el-icon-folder-opened\" ></el-button>\n                    </span>\n                    <el-dropdown-menu slot=\"dropdown\">\n                        <el-dropdown-item @click.native=\"onFileNew\">新建</el-dropdown-item>\n                        <el-dropdown-item @click.native=\"onFileOpen\" divided>打开</el-dropdown-item>\n                        <el-dropdown-item @click.native=\"onFileOpenTo\">打开到</el-dropdown-item>\n                        <el-dropdown-item @click.native=\"onFileSave\" divided>保存</el-dropdown-item>\n                        <el-dropdown-item @click.native=\"onFileSaveAs\">另存为</el-dropdown-item>\n                        <el-dropdown-item @click.native=\"onSaveAsPdf\">另存为PDF</el-dropdown-item>\n                        <el-dropdown-item @click.native=\"onFileDelete\" divided>删除</el-dropdown-item>\n                        <el-dropdown-item @click.native=\"onFilePrint\" divided>打印</el-dropdown-item>\n                        <el-dropdown-item @click.native=\"onFileClose\" divided>关闭</el-dropdown-item>\n                    </el-dropdown-menu>\n                </el-dropdown>\n            </template>\n        </el-header>\n        <el-main style=\"width:100%;height:40vh;padding:0px;border-top:1px solid #409EFF;\" v-show=\"searchResultStatus\">\n            <div class=\"div-hover-effect\" style=\"display:flex;padding:10px;cursor:pointer;\" \n                v-for=\"(item,index) in entity.search.result\"\n                :key=\"index\"\n                @click=\"onEntitySelect(item)\"\n                draggable=\"true\" \n                @dragstart=\"onEntityDragStart(item,$event)\">\n                <el-image :src=\"item | pickIcon\" style=\"width:15%;height:15%;max-width:48px;min-width:48px;\" slot=\"suffix\">\n                    <div slot=\"error\" class=\"image-slot\">\n                        <i class=\"el-icon-picture-outline\"></i>\n                    </div>\n                </el-image>\n                <div style=\"height:48px;line-height:48px;width:80%;padding-left:10px;\">{{ item.value }}</div>\n                <el-tooltip content=\"拖动到画布\">\n                    <el-button type=\"text\" icon=\"el-icon-menu\" style=\"padding-left:10px;cursor:pointer;\"></el-button>\n                </el-tooltip>\n                <el-tooltip content=\"实体分析\">\n                    <el-button type=\"text\" icon=\"el-icon-postcard\" style=\"padding-left:10px;cursor:pointer;\" @click=\"onEntityDiagnosis(item)\">\n                    </el-button>\n                </el-tooltip>\n            </div>\n            <el-button type=\"text\" icon=\"el-icon-down\"></el-button>\n        </el-main>\n    </el-container>\n</template>\n\n<script>\nimport ActionView from '../ActionView';\nimport _ from 'lodash';\nimport toggleBarMixin from '../../mixins/index.js';\n\n\nexport default {\n    name: \"SearchBar\",\n    mixins: [toggleBarMixin],\n    data(){\n        return {\n            control: {\n                show: true\n            },\n            entity: {\n                search: {\n                    loading: false,\n                    term: \"\",\n                    result: null\n                },\n                selected: null\n            }\n        }\n    },\n    watch: {\n        'entity.search.term':function(val){\n            if(_.isEmpty(val)){\n                this.onEntityClear();\n            }\n        }\n    },\n    computed:{\n        controlStatus(){\n            if(this.control.show){\n                return 'el-icon-arrow-left';\n            } else {\n                return 'el-icon-arrow-right';\n            }\n        },\n        searchResultStatus(){\n            return this.control.show && this.entity.search.result && this.entity.search.result.length > 0;\n        }\n    },\n    filters: {\n        pickIcon(item){\n            let icon = item.icon;\n            return `/static/assets/images/entity/png/${icon}.png`;\n        }\n    },\n    components:{\n        ActionView\n    },\n    methods: {\n        onToggleBar(){\n            this.control.show = !this.control.show; \n        },\n        onEntityTreeSelected(data){\n            this.entity.search.term = data.alias;\n            this.onEntitySearch();\n        },\n        onEntityClear(){\n            this.entity.search.selected = null;\n            this.entity.search.result = null;\n        },\n        onEntitySearch() {\n\n            this.entity.search.loading = true;\n            \n            if(_.isEmpty(this.entity.search.term)){\n                return false;\n            }\n\n            let param = encodeURIComponent(this.entity.search.term);\n            this.m3.callFS(\"/matrix/m3graph/entity-search-by-term.js\",param).then( rtn=>{\n                \n                let entitys = rtn.message;\n\n                if(_.isEmpty(entitys)){\n                    this.$message({\n                        type: \"info\",\n                        message: \"没有匹配数据！\"\n                    })\n\n                    this.entity.search.result = [];\n\n                    this.entity.search.loading = false;\n\n                    return false;\n                }\n\n                this.entity.search.result = entitys;\n\n                this.entity.search.result = _.map(this.entity.search.result,(v)=>{\n                    return _.extend(v,{ cell: {edge:false} } );\n                })\n\n                this.entity.search.loading = false;\n\n            } )\n            \n        },\n        onEntitySelect(){\n\n        },\n        onEntityDragStart(item,event){\n            event.dataTransfer.setData(\"Text\",JSON.stringify(item));\n        },\n        onEntityDragEnd(){\n\n        },\n        ononEntityDiagnosis(){\n\n        },\n        onFileNew(){\n            /* this.deleteCells(true);\n            this.file.doc = null; */\n        },\n        onFileOpen(auto){\n            /* try{\n                \n                let editor = inst.app.$refs.graphViewRef.$refs.graphViewContainerInst.model.editor;\n\n                // 选择文件打开\n                if(!auto){\n                    this.file.doc = this.$refs.dfsOpen.node;\n                }\n                \n                let xml = fsHandler.fsContent(this.file.doc.parent, this.file.doc.name);\n                let doc = mxUtils.parseXml(xml);\n                let codec = new mxCodec(doc);\n                codec.decode(doc.documentElement, editor.graph.getModel());\n            } catch(err){\n                console.error(err);\n            } finally {\n                this.file.dialogOpen.visible = false;\n                inst.app.$refs.graphViewRef.$refs.graphViewContainerInst.toCenter();\n            } */\n            \n        },\n        onFileOpenTo(auto){\n            /* // 新建图\n            let graph = new mxGraph();\n            let parent = graph.getDefaultParent();\n            \n            try{\n                \n                \n\n                // 选择文件打开\n                if(!auto){\n                    this.file.doc = this.$refs.dfsOpen.node;\n                }\n                \n                let xml = fsHandler.fsContent(this.file.doc.parent, this.file.doc.name);\n                let doc = mxUtils.parseXml(xml);\n                let codec = new mxCodec(doc);\n                codec.decode(doc.documentElement, graph.getModel());\n\n                // 合并到当前图\n                let editor = inst.app.$refs.graphViewRef.$refs.graphViewContainerInst.model.editor;\n                editor.graph.getModel().mergeChildren(graph.getModel().getRoot(), editor.graph.getDefaultParent());\n\n                // Executes the layout handler\n                _.delay(()=>{\n                    inst.app.$refs.graphViewRef.$refs.graphViewContainerInst.executeLayout();\n                },500)\n            } catch(err){\n                console.error(err);\n            } finally {\n                this.file.dialogOpenTo.visible = false;\n            } */\n            \n        },\n        onFileSave(){\n            /* if(this.file.doc){\n                let editor = inst.app.$refs.graphViewRef.$refs.graphViewContainerInst.model.editor;\n                let enc = new mxCodec(mxUtils.createXmlDocument());\n                let node = enc.encode(editor.graph.getModel());\n                let xml = mxUtils.getPrettyXml(node);\n                let attr = _.extend(this.file.doc, {});\n                let rtn = fsHandler.fsNew('file',this.file.doc.parent, this.file.doc.name, xml, attr);\n                if(rtn == 1){\n                    this.$message({\n                        type:\"success\",\n                        message: \"保存成功！\"\n                    })\n                }\n            } else {\n                this.file.dialogSaveAs.visible = true;\n            } */\n        },\n        onFileSaveAs(){\n            \n            /* let editor = inst.app.$refs.graphViewRef.$refs.graphViewContainerInst.model.editor;\n\n            let enc = new mxCodec(mxUtils.createXmlDocument());\n            let node = enc.encode(editor.graph.getModel());\n            let xml = mxUtils.getPrettyXml(node);\n            let attr = {};\n            \n            let parent = this.$refs.dfsSaveas.node.fullname;\n            let name = this.$refs.dfsSaveas.fileName;\n            let rtn = fsHandler.fsNew('file',parent, name, xml, attr);\n            if(rtn == 1){\n                this.$message({\n                    type:\"success\",\n                    message: \"保存成功！\"\n                })\n                \n                this.file.doc = {parent:parent, name:name, fullname: [parent,name].join(\"/\")};\n            }\n\n            this.file.dialogSaveAs.visible = false; */\n        },\n        onSaveAsPdf(){\n            // mxUtils.printScreen(inst.app.$refs.graphViewRef.$refs.graphViewContainerInst.model.editor.graph);\n        },\n        onFileClose(){\n            // this.deleteCells(true);\n            // this.file.doc = null;\n        },\n        onFilePrint(){\n            // inst.app.$refs.graphViewRef.$refs.graphViewContainerInst.model.editor.execute('print');\n        },\n        onFileDelete(){\n            /* if(this.file.doc){\n\n                this.$confirm(`确认要删除该设计文档：${this.file.doc.name}？`, '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    let rtn = fsHandler.fsDelete(this.file.doc.parent,this.file.doc.name);\n\n                    if (rtn == 1){\n                        this.$message({\n                            type: \"success\",\n                            message: \"删除成功！\"\n                        });\n                        this.deleteCells(true);\n                        this.file.doc = null;\n                        localStorage.setItem(\"CLASS-DESIGN-OPEN-FILE\",'');\n                        this.summaryInfo();\n                    } else {\n                        this.$message({\n                            type: \"error\",\n                            message: \"删除失败 \" + rtn.message\n                        })\n                    } \n                }).catch(() => {\n                    \n                });\n            } */\n        }\n    }\n}\n</script>\n\n<style scoped>\n    .search-bar.el-container{\n        position: absolute;\n        left: 10px;\n        top: 10px;\n        z-index: 1000;\n        background: #f2f2f2;\n    }\n    .search-bar .el-header{\n        text-align: center;\n        border: 1px solid #f2f2f2;\n    }\n    .search-bar .el-button+.el-button {\n        margin-left: 0px;\n    }\n    .search-bar .el-button{\n        color: #777777;\n        width: 50px;\n        border-radius: 0px!important;\n    }\n\n    .search-bar .input{\n        width: auto;\n        min-width: 10vw;\n    }\n\n    .search-bar .search span{\n        color: #ffffff;\n    }\n</style>\n<style>\n    .search-bar .el-input-group__append, .el-input-group__prepend{\n        border: unset!important;\n    }\n    .search-bar .el-input--mini .el-input__inner {\n        height: 33px!important;\n        line-height: 33px!important;\n        border: 1px solid #f2f2f2!important;\n        border-radius: 0px!important;\n    }\n</style>"]}]}