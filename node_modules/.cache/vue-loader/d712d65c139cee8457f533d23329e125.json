{"remainingRequest":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/src/components/graph/searchbar/AdvBar.vue?vue&type=style&index=0&id=3c2e8c56&scoped=true&lang=css&","dependencies":[{"path":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/src/components/graph/searchbar/AdvBar.vue","mtime":1629783440070},{"path":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/cnwangzd/Documents/cnwangzd/wecise/m3/apps/m3search/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hZHYtYmFyLmVsLWNvbnRhaW5lcnsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGxlZnQ6IDEwcHg7CiAgICB0b3A6IDEwcHg7CiAgICB6LWluZGV4OiAxMDAwOwogICAgYmFja2dyb3VuZDogI2YyZjJmMjsKfQouYWR2LWJhciAuZWwtaGVhZGVyewogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgYm9yZGVyOiAxcHggc29saWQgI2YyZjJmMjsKfQouYWR2LWJhciAuZWwtYnV0dG9uKy5lbC1idXR0b24gewogICAgbWFyZ2luLWxlZnQ6IDBweDsKfQouYWR2LWJhciAuZWwtYnV0dG9uewogICAgY29sb3I6ICM3Nzc3Nzc7CiAgICB3aWR0aDogNTBweDsKICAgIGJvcmRlci1yYWRpdXM6IDBweCFpbXBvcnRhbnQ7Cn0KCi5hZHYtYmFyIC5pbnB1dHsKICAgIHdpZHRoOiBhdXRvOwogICAgbWluLXdpZHRoOiA4M3Z3Owp9CgouYWR2LWJhciAuc2VhcmNoIHNwYW57CiAgICBjb2xvcjogI2ZmZmZmZjsKfQoKLmFkdi1iYXIgLmVsLWRpdmlkZXJfX3RleHQgewogICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgICBjb2xvcjogIzc3Nzc3NzsKfQoKLmFkdi1iYXIgLmFkdi1tYWluewogICAgd2lkdGg6MTAwJTsKICAgIGhlaWdodDozMHZoOwogICAgYm9yZGVyLXRvcDoxcHggc29saWQgIzQwOUVGRjsKfQo="},{"version":3,"sources":["AdvBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"AdvBar.vue","sourceRoot":"src/components/graph/searchbar","sourcesContent":["<template>\n    <el-container class=\"adv-bar\">\n        <el-header style=\"display:flex;height:35px;line-height:35px;padding:0px;\">\n            <el-button type=\"text\" :icon=\"controlStatus\" @click=\"control.show=!control.show\"></el-button>\n            <template v-if=\"control.show\">\n                <el-input placeholder=\"搜索实体、活动关键字\" class=\"input\" disabled></el-input>\n                <el-button type=\"text\" @click=\"$emit('toggle-view','SearchBar')\">\n                    <span class=\"el-icon-close\" style=\"font-size:14px;font-weight: 900;\"></span>\n                </el-button>\n                <el-button type=\"success\" class=\"search\" :loading=\"search.loading\" @click=\"onSearch\">\n                    <span class=\"el-icon-search\"></span>\n                </el-button>\n            </template>\n        </el-header>\n        <el-main class=\"adv-main\" v-show=\"control.show\">\n            <Editor\n                v-model=\"editor.data\"\n                @init=\"onEditorInit\"\n                :lang=\"editor.lang.value\"\n                :theme=\"editor.theme.value\"\n                width=\"100%\"\n                height=\"100%\"\n                ref=\"editorRef\">\n            </Editor>\n        </el-main>\n    </el-container>\n</template>\n\n<script>\nimport _ from 'lodash';\nimport toggleBarMixin from '../../mixins/index.js';\n\nexport default {\n    name: \"AdvBar\",\n    mixins: [toggleBarMixin],\n    components:{\n        Editor:require(\"vue2-ace-editor\"),\n    },\n    data(){\n        return {\n            control: {\n                show: true\n            },\n            search: {\n                loading: false,\n                term: \"\",\n                result: null\n            },\n            selected: null,\n            editor: {\n                data: null,\n                loading: false,\n                lang: {\n                    value: \"sql\",\n                    list: []\n                },\n                theme: {\n                    value: \"chrome\",\n                    list: this.m3.EDITOR_THEME\n                }\n            }\n        }\n    },\n    watch: {\n        'search.term':function(val){\n            if(_.isEmpty(val)){\n                this.onClear();\n            }\n        }\n    },\n    computed:{\n        controlStatus(){\n            if(this.control.show){\n                return 'el-icon-arrow-left';\n            } else {\n                return 'el-icon-arrow-right';\n            }\n        },\n        searchResultStatus(){\n            return this.control.show && this.entity.search.result && this.entity.search.result.length > 0;\n        }\n    },\n    filters: {\n        pickIcon(item){\n            let icon = item.icon;\n            return `/static/assets/images/entity/png/${icon}.png`;\n        }\n    },\n    created(){\n        this.onLoadHistory();\n    },\n    methods: {\n        onToggleBar(){\n            this.control.show = !this.control.show; \n        },\n        onEditorInit(){\n            require(\"brace/ext/language_tools\"); //language extension prerequsite...\n            require(`brace/mode/${this.editor.lang.value}`); //language\n            require(`brace/snippets/${this.editor.lang.value}`); //snippet\n            require(`brace/theme/${this.editor.theme.value}`); //language\n\n            let editor = this.$refs.editorRef.editor;\n            editor.on('change', _.debounce(()=> {\n                this.onSaveAsHistory();\n            }),1000);\n\n        },\n        onLoadHistory(){\n            let param = encodeURIComponent(JSON.stringify({action:'load',value:null}));\n            this.m3.callFS(\"/matrix/m3graph/history.js\", param).then(res=>{\n                this.editor.data = res.message;\n            })\n        },\n        onSaveAsHistory(){\n            let param = encodeURIComponent(JSON.stringify({action:'save',value: this.editor.data}));\n            this.m3.callFS(\"/matrix/m3graph/history.js\", param).then(res=>{\n                console.log(res)\n            })\n        },\n        onEntityTreeSelected(data){\n            this.search.term = data.alias;\n            this.onSearch();\n        },\n        onClear(){\n            this.search.selected = null;\n            this.search.result = null;\n        },\n        onSearch() {\n\n            let editor = this.$refs.editorRef.editor;\n            this.search.term = editor.getSelectedText() || editor.getValue();\n\n            this.search.loading = true;\n            \n            if(_.isEmpty(this.search.term)){\n                this.search.loading = false;\n                return false;\n            }\n\n            this.m3.callFS(\"/matrix/m3graph/graphService.js\", encodeURIComponent(this.search.term)).then( res=>{\n            \n                this.$emit(\"graph-data\",res.message[0].graph);\n\n                this.search.loading = false;\n\n                this.control.show = false;\n\n            }).catch(()=>{\n                this.search.loading = false;\n            });\n            \n        }\n    }\n}\n</script>\n\n<style scoped>\n    .adv-bar.el-container{\n        position: absolute;\n        left: 10px;\n        top: 10px;\n        z-index: 1000;\n        background: #f2f2f2;\n    }\n    .adv-bar .el-header{\n        text-align: center;\n        border: 1px solid #f2f2f2;\n    }\n    .adv-bar .el-button+.el-button {\n        margin-left: 0px;\n    }\n    .adv-bar .el-button{\n        color: #777777;\n        width: 50px;\n        border-radius: 0px!important;\n    }\n\n    .adv-bar .input{\n        width: auto;\n        min-width: 83vw;\n    }\n\n    .adv-bar .search span{\n        color: #ffffff;\n    }\n\n    .adv-bar .el-divider__text {\n        background-color: transparent;\n        color: #777777;\n    }\n\n    .adv-bar .adv-main{\n        width:100%;\n        height:30vh;\n        border-top:1px solid #409EFF;\n    }\n</style>\n<style>\n    .adv-bar .el-input-group__append, .el-input-group__prepend{\n        border: unset!important;\n    }\n    .adv-bar .el-input--mini .el-input__inner {\n        height: 33px!important;\n        line-height: 33px!important;\n        border: transparent!important;\n        background: transparent!important;\n        border-radius: 0px!important;\n    }\n</style>"]}]}